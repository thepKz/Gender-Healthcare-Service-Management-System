# CI/CD for Admin page and Client Page bonus Backend Page
name: CI/CD

on:
  push:
    branches: [ main, develop, feature/* ]
    paths:
      - '**/*.tsx'
      - '**/*.ts'
      - '**/*.js'
      - '**/*.json'
      - 'vite.config.*'
      - 'package.json'
      - 'package-lock.json'
      - 'client/**'
      - 'server/**'
      - 'admin/**'
      - '**/*.xml'
      - '**/*.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/*.tsx'
      - '**/*.ts'
      - '**/*.js'
      - '**/*.json'
      - 'vite.config.*'
      - 'package.json'
      - 'package-lock.json'
      - 'client/**'
      - 'server/**'
      - 'admin/**'
  workflow_dispatch:

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Remove node_modules and package-lock.json
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      - name: Install dependencies and build server
        run: |
          cd server
          npm ci
          npm install --save-dev copyfiles
          npm run build
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

      - name: Install dependencies and build client
        run: |
          cd client
          npm ci
          npm run build

      - name: Upload artifact client
        uses: actions/upload-artifact@v3
        with:
          name: client-dist
          path: client/dist

  # CLIENT Job to deploy the application to the staging environment
  deploy-staging:
    needs: test-and-build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: client-dist
          path: ./client/dist

      - name: Deploy to Netlify (Staging)
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './client/dist'
          production-branch: develop
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy to staging from GitHub Actions"



  # Job to deploy the backend to Render
  deploy-backend:
    needs: [test-and-build]
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        run: curl ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
